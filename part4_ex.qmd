## Exercises day 4

#### Try fitting homogeneous Poisson, inhomogeneous Poisson and clustered point process models to the hardcore pattern simulated on day 3.

```{r}
library(spatstat)
# no seed set, so expect different results:
set.seed(1357)
ppi = rpoispp(function(x,y,...) 500 * x)
cl <- rThomas(100, .02, 5)
hc <- rHardcore(0.05, 1.5, square(50)) 
ppm(hc, ~1) # homogeneous Poisson
ppm(hc, ~x) # inhomogeneous Poisson
kppm(hc)
```
and for the long output: 
```{r}
kppm(hc) |> summary()
```

####  Using `krige.cv`: 

carry out a leave-one-out cross validation using the four fitted
variogram models of day 3, and compute the root mean square
prediction error for all four models. Which one is favourable in
this respect?

```{r}
# create no2.sf:
library(sf)
no2 <- read.csv(system.file("external/no2.csv",
    package = "gstat"))
crs <- st_crs("EPSG:32632") # a csv doesn't carry a CRS!
st_as_sf(no2, crs = "OGC:CRS84", coords =
    c("station_longitude_deg", "station_latitude_deg")) |>
    st_transform(crs) -> no2.sf
# sample variogram:
library(gstat)
v = variogram(NO2~1, no2.sf)
fit.e = fit.variogram(v, vgm(1, "Exp", 50000))
fit.s = fit.variogram(v, vgm(1, "Sph", 50000))
fit.m1 = fit.variogram(v, vgm(1, "Mat", 50000, kappa = .3))
fit.m2 = fit.variogram(v, vgm(1, "Mat", 50000, kappa = 4))
rmse = function(x) sqrt(mean(x$residual^2))
krige.cv(NO2~1, no2.sf, fit.e) |> rmse()
krige.cv(NO2~1, no2.sf, fit.s) |> rmse()
krige.cv(NO2~1, no2.sf, fit.m1) |> rmse()
krige.cv(NO2~1, no2.sf, fit.m2) |> rmse()
```


#### What causes the differences between the mean and the variance of the conditional simulations (left) and the mean and variance obtained by kriging (right)?

The sample size: for a larger sample size (larger number of simulations) they become closer.

```{r}
"https://github.com/edzer/sdsr/raw/main/data/de_nuts1.gpkg" |>
  read_sf() |>
  st_transform(crs) -> de
library(stars)
g2 = st_as_stars(st_bbox(de))
g3 = st_crop(g2, de)
v.fit = fit.e
cs = krige(NO2~1, no2.sf, g3, v.fit, nsim = 500, nmax = 30)
csm = st_apply(cs, c("x", "y"), mean)
csm$kriging = krige(NO2~1, no2.sf, g3, v.fit)[1]
plot(merge(csm), breaks = "equal")
csv = st_apply(cs, c("x", "y"), var)
csv$kr_var = krige(NO2~1, no2.sf, g3, v.fit)[2]
plot(merge(csv), breaks = "equal")
```

####  When comparing (above) the sample variogram ...

of simulated fields
with the variogram model used to simulate them, where do you
see differences? Can you explain why these are not identical, or
hypothesize under which circumstances these would become more similar (or
identical)?

* differences are larger for larger lag values
* if we would make the _extent_ (area) larger, we get more independent information for any given distance (lag), and obtain spatial correlations values that are closer to the ones used for generating the Gaussian process.

####  Under which practical data analysis problem would conditional simulations be more useful than the kriging prediction and kriging variance maps?

Whenever the maps are input to a model that is sensitive to errors
in predictions and/or to correlations of prediction errors, e.g. a
model that does a non-linear aggregation over space and time,
such as a rainfall-runoff model.


